@{
    ViewData["Title"] = "Home Page";
}

@section Scripts
{

    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>

    <script type="text/javascript">

        $(document).ready(() => {

            var connection = new signalR
            .HubConnectionBuilder()
            .configureLogging(signalR.LogLevel.Information)
            //.withAutomaticReconnect() // default
            //.withAutomaticReconnect([0, 2000, 10000, 30000]) // default
            .withAutomaticReconnect([1000,1000,2000,3000,5000,8000]) // custom
            .withUrl("https://localhost:5001/MyHub").build();



            showStatus();

            startConnection();

            showStatus();



            // Functions
            function showStatus() {
                $("#connectionStatus").text(connection.state);
            }

            function showLoading() {
                $("#loading").show();
            }

            function hideLoading() {
                $("#loading").hide();
            }

            function startConnection() {
                connection.start().then(() => {
                    showStatus();
                    //connection.invoke("GetNames");
                    connection.invoke("GetNamesByGroup");
                    hideLoading();
                }).catch((err) => { 
                    console.log("startConnection: " + err);
                    setTimeout(() => startConnection(), 2000);
                });
            }



            // Subscribes on and Connection methods
            connection.onreconnecting((err) => {
                showStatus();
                showLoading();
                console.log("onreconnecting: " + err);
            });

            connection.onreconnected((connectionId) => {
                showStatus();
                hideLoading();
                console.log("connectionId: " + connectionId);
            });

            connection.onclose(() => {
                showStatus();
                hideLoading();
                startConnection();
            });

            connection.on("ReceiveName", (name) => {
                $("#namesList").append(`<li class="list-group-item">${name}</li>`);

                console.log("receive name => "+name);
            });

            connection.on("ReceiveNames", (names) => {
                $("#namesList").empty();

                names.forEach((name, index) => {
                    $("#namesList").append(`<li class="list-group-item">${name}</li>`);
                });

                console.log("receive names => "+names.length);
            });

            connection.on("ReceiveClientCount", (clientCount) => {
                $("#clientCount").text(clientCount);

                console.log("receive count => "+clientCount);
            });

            connection.on("Notify", (message) => {
                $("#notify").text(message);

                $("#notifydiv").html(`<div class="alert alert-success">${message}</div>`);

                console.log("receive notify => "+message);
            });

            connection.on("Error", (message) => {
                alert(message);

                console.log("receive notify => "+message);
            });

            connection.on("ReceiveMessageByGroup", (userName, teamName) => {
                /*
                if(teamName == "Team A")
                    $("#ListTeamA").append(`<li class="list-group-item">${userName}</li>`);
                else
                    $("#ListTeamB").append(`<li class="list-group-item">${userName}</li>`);
                 */

                let listName = "List" + teamName.replace(" ", "");
                $(`#${listName}`).append(`<li class="list-group-item">${userName}</li>`);

                console.log("receive user / team => "+userName+" / "+teamName);
            });

            connection.on("ReceiveNamesByGroup", (teams) => {
                teams.forEach((team, index) => {

                    let listName = "List" + team.teamName.replace(" ", "");

                    $(`#${listName}`).empty();

                    team.users.forEach((user, indexu) => {

                        $(`#${listName}`).append(`<li class="list-group-item">${user.name}</li>`);

                    });
                });

                console.log("receive names => "+teams.length);
            });


            // Click events
            $("#btnSaveName").click(() => {
                connection.invoke("SendName", $("#txtName").val()).catch((err) => {
                    console.log("clickSaveName: " + err);
                });
            });

            $("#btnSaveToTeam").click(() => {
                let userName = $("#txtName").val();
                
                let teamName = $("input[type=radio]:checked").val();

                connection.invoke("SendNameByGroup", userName, teamName ).catch((err) => {
                    console.log("clickSaveToTeam: " + err);
                });
            });

            $("input[type=radio]").change(() => {
                let value = $("input[type=radio]:checked").val();

                if(value == "Team A") {
                    connection.invoke("AddToGroup", "Team A");
                    connection.invoke("RemoveFromGroup", "Team B");
                }
                else {
                    connection.invoke("AddToGroup", "Team B");
                    connection.invoke("RemoveFromGroup", "Team A");
                }

                connection.invoke("GetNamesByGroup");
            });
        });

    </script>

}

<div class="row">
    <div class="col-md-8 offset-1">
        <div>
            <div class="col-md-6 float-start p-1">
                <input class="form-control" type="text" id="txtName" />
            </div>
            <div class="col-md-3 float-start p-1">
                <button class="btn btn-primary btn-sm" id="btnSaveName">Save Name</button>
            </div>
            <div class="col-md-3 float-start p-1">
                <button class="btn btn-warning btn-sm" id="btnSaveToTeam">Save To Team</button>
            </div>
            <div class="clearfix"></div>
        </div>
        <hr />
        <div class="alert alert-info">
            <div class="float-start">
                <div class="float-start px-1">Connection Status : <strong id="connectionStatus"></strong></div>
                <div class="float-end px-1">Client Count : <strong id="clientCount"></strong></div>
            </div>
            <div class="float-end px-1">
                <div id="loading" class="spinner-border" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
            <div class="clearfix"></div>
        </div>
        <div class="alert alert-info">
            <div class="float-start">
                <strong id="notify"></strong>
            </div>
            <div class="float-end p-1" id="notifydiv"></div>
            <div class="clearfix"></div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-8 offset-md-2">
        <div class="form-check form-check-inline">
            <input class="form-check-input" type="radio" name="TeamGroup" value="Team A" />
            <label class="form-check-label">Team A</label>
        </div>
        <div class="form-check form-check-inline">
            <input class="form-check-input" type="radio" name="TeamGroup" value="Team B" />
            <label class="form-check-label">Team B</label>
        </div>
    </div>
    <div class="col-md-8 offset-2">
        <div class="row">
            <div class="col-md-6">
                <ul class="list-group" id="ListTeamA"></ul>
            </div>
            <div class="col-md-6">
                <ul class="list-group" id="ListTeamB"></ul>
            </div>
        </div>
    </div>
</div>
